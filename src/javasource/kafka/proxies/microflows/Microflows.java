// This file was generated by Mendix Studio Pro.
//
// WARNING: Code you write here will be lost the next time you deploy the project.

package kafka.proxies.microflows;

import java.util.HashMap;
import java.util.Map;
import com.mendix.core.Core;
import com.mendix.core.CoreException;
import com.mendix.systemwideinterfaces.MendixRuntimeException;
import com.mendix.systemwideinterfaces.core.IContext;
import com.mendix.systemwideinterfaces.core.IMendixObject;

public class Microflows
{
	// These are the microflows for the Kafka module
	public static void aCr_KafkaConsumer(IContext context, kafka.proxies.Consumer _kafkaConsumer)
	{
		Map<java.lang.String, Object> params = new HashMap<>();
		params.put("KafkaConsumer", _kafkaConsumer == null ? null : _kafkaConsumer.getMendixObject());
		Core.microflowCall("Kafka.ACr_KafkaConsumer").withParams(params).execute(context);
	}
	public static void aCr_KafkaProducer(IContext context, kafka.proxies.Producer _kafkaProducer)
	{
		Map<java.lang.String, Object> params = new HashMap<>();
		params.put("KafkaProducer", _kafkaProducer == null ? null : _kafkaProducer.getMendixObject());
		Core.microflowCall("Kafka.ACr_KafkaProducer").withParams(params).execute(context);
	}
	public static void aCr_KafkaServer(IContext context, kafka.proxies.Server _kafkaServer)
	{
		Map<java.lang.String, Object> params = new HashMap<>();
		params.put("KafkaServer", _kafkaServer == null ? null : _kafkaServer.getMendixObject());
		Core.microflowCall("Kafka.ACr_KafkaServer").withParams(params).execute(context);
	}
	public static void aCT_ConfigObjectChanged(IContext context)
	{
		Map<java.lang.String, Object> params = new HashMap<>();
		Core.microflowCall("Kafka.ACT_ConfigObjectChanged").withParams(params).execute(context);
	}
	public static boolean afterStartup(IContext context)
	{
		Map<java.lang.String, Object> params = new HashMap<>();
		return (java.lang.Boolean) Core.microflowCall("Kafka.AfterStartup").withParams(params).execute(context);
	}
	public static boolean bCo_Consumer(IContext context, kafka.proxies.Consumer _consumer)
	{
		Map<java.lang.String, Object> params = new HashMap<>();
		params.put("Consumer", _consumer == null ? null : _consumer.getMendixObject());
		return (java.lang.Boolean) Core.microflowCall("Kafka.BCo_Consumer").withParams(params).execute(context);
	}
	public static boolean bCo_KeyStore(IContext context, kafka.proxies.KeyStore _keyStore)
	{
		Map<java.lang.String, Object> params = new HashMap<>();
		params.put("KeyStore", _keyStore == null ? null : _keyStore.getMendixObject());
		return (java.lang.Boolean) Core.microflowCall("Kafka.BCo_KeyStore").withParams(params).execute(context);
	}
	public static void beforeShutdown(IContext context)
	{
		Map<java.lang.String, Object> params = new HashMap<>();
		Core.microflowCall("Kafka.BeforeShutdown").withParams(params).execute(context);
	}
	public static kafka.proxies.ConfigChanges dS_GetConfigChanges(IContext context)
	{
		Map<java.lang.String, Object> params = new HashMap<>();
		IMendixObject result = (IMendixObject)Core.microflowCall("Kafka.DS_GetConfigChanges").withParams(params).execute(context);
		return result == null ? null : kafka.proxies.ConfigChanges.initialize(context, result);
	}
	public static java.util.List<kafka.proxies.Partition> dS_GetDetailedPartitions(IContext context, kafka.proxies.Topic _topic, kafka.proxies.Explorer _explorer)
	{
		Map<java.lang.String, Object> params = new HashMap<>();
		params.put("Topic", _topic == null ? null : _topic.getMendixObject());
		params.put("Explorer", _explorer == null ? null : _explorer.getMendixObject());
		java.util.List<IMendixObject> objs = Core.microflowCall("Kafka.DS_GetDetailedPartitions").withParams(params).execute(context);
		java.util.List<kafka.proxies.Partition> result = null;
		if (objs != null)
		{
			result = new java.util.ArrayList<>();
			for (IMendixObject obj : objs)
				result.add(kafka.proxies.Partition.initialize(context, obj));
		}
		return result;
	}
	public static kafka.proxies.Explorer dS_GetExplorer(IContext context, kafka.proxies.Server _server)
	{
		Map<java.lang.String, Object> params = new HashMap<>();
		params.put("Server", _server == null ? null : _server.getMendixObject());
		IMendixObject result = (IMendixObject)Core.microflowCall("Kafka.DS_GetExplorer").withParams(params).execute(context);
		return result == null ? null : kafka.proxies.Explorer.initialize(context, result);
	}
	public static kafka.proxies.MessageOverview dS_GetNewMessageOverview(IContext context, kafka.proxies.Partition _partition)
	{
		Map<java.lang.String, Object> params = new HashMap<>();
		params.put("Partition", _partition == null ? null : _partition.getMendixObject());
		IMendixObject result = (IMendixObject)Core.microflowCall("Kafka.DS_GetNewMessageOverview").withParams(params).execute(context);
		return result == null ? null : kafka.proxies.MessageOverview.initialize(context, result);
	}
	public static kafka.proxies.Publisher dS_GetPublisher(IContext context, kafka.proxies.Server _server)
	{
		Map<java.lang.String, Object> params = new HashMap<>();
		params.put("Server", _server == null ? null : _server.getMendixObject());
		IMendixObject result = (IMendixObject)Core.microflowCall("Kafka.DS_GetPublisher").withParams(params).execute(context);
		return result == null ? null : kafka.proxies.Publisher.initialize(context, result);
	}
	public static java.util.List<kafka.proxies.Consumer> dS_GetSelectableConsumers(IContext context, kafka.proxies.Server _server)
	{
		Map<java.lang.String, Object> params = new HashMap<>();
		params.put("Server", _server == null ? null : _server.getMendixObject());
		java.util.List<IMendixObject> objs = Core.microflowCall("Kafka.DS_GetSelectableConsumers").withParams(params).execute(context);
		java.util.List<kafka.proxies.Consumer> result = null;
		if (objs != null)
		{
			result = new java.util.ArrayList<>();
			for (IMendixObject obj : objs)
				result.add(kafka.proxies.Consumer.initialize(context, obj));
		}
		return result;
	}
	public static void example_OnReceiveMicroflow(IContext context, java.lang.Long _offset, java.lang.String _key, java.lang.String _value, java.lang.String _messageType, java.lang.Long _partition)
	{
		Map<java.lang.String, Object> params = new HashMap<>();
		params.put("Offset", _offset);
		params.put("Key", _key);
		params.put("Value", _value);
		params.put("MessageType", _messageType);
		params.put("Partition", _partition);
		Core.microflowCall("Kafka.Example_OnReceiveMicroflow").withParams(params).execute(context);
	}
	public static void iVK_CreateNewHeader(IContext context, kafka.proxies.Publisher _publisher)
	{
		Map<java.lang.String, Object> params = new HashMap<>();
		params.put("Publisher", _publisher == null ? null : _publisher.getMendixObject());
		Core.microflowCall("Kafka.IVK_CreateNewHeader").withParams(params).execute(context);
	}
	public static void iVK_PublishMessage(IContext context, kafka.proxies.Publisher _publisher)
	{
		Map<java.lang.String, Object> params = new HashMap<>();
		params.put("Publisher", _publisher == null ? null : _publisher.getMendixObject());
		Core.microflowCall("Kafka.IVK_PublishMessage").withParams(params).execute(context);
	}
	public static void iVK_RetrieveMessages(IContext context, kafka.proxies.MessageOverview _messageOverview, kafka.proxies.Partition _partition)
	{
		Map<java.lang.String, Object> params = new HashMap<>();
		params.put("MessageOverview", _messageOverview == null ? null : _messageOverview.getMendixObject());
		params.put("Partition", _partition == null ? null : _partition.getMendixObject());
		Core.microflowCall("Kafka.IVK_RetrieveMessages").withParams(params).execute(context);
	}
	public static void iVK_RetrieveTopics(IContext context, kafka.proxies.Explorer _explorer)
	{
		Map<java.lang.String, Object> params = new HashMap<>();
		params.put("Explorer", _explorer == null ? null : _explorer.getMendixObject());
		Core.microflowCall("Kafka.IVK_RetrieveTopics").withParams(params).execute(context);
	}
	public static void iVK_SaveKafkaConsumer(IContext context, kafka.proxies.Consumer _kafkaConsumer)
	{
		Map<java.lang.String, Object> params = new HashMap<>();
		params.put("KafkaConsumer", _kafkaConsumer == null ? null : _kafkaConsumer.getMendixObject());
		Core.microflowCall("Kafka.IVK_SaveKafkaConsumer").withParams(params).execute(context);
	}
	public static void iVK_SaveKafkaProducer(IContext context, kafka.proxies.Producer _kafkaProducer)
	{
		Map<java.lang.String, Object> params = new HashMap<>();
		params.put("KafkaProducer", _kafkaProducer == null ? null : _kafkaProducer.getMendixObject());
		Core.microflowCall("Kafka.IVK_SaveKafkaProducer").withParams(params).execute(context);
	}
	public static void iVK_SaveKafkaServer(IContext context, kafka.proxies.Server _kafkaServer)
	{
		Map<java.lang.String, Object> params = new HashMap<>();
		params.put("KafkaServer", _kafkaServer == null ? null : _kafkaServer.getMendixObject());
		Core.microflowCall("Kafka.IVK_SaveKafkaServer").withParams(params).execute(context);
	}
	public static void onCh_ConfigChange(IContext context)
	{
		Map<java.lang.String, Object> params = new HashMap<>();
		Core.microflowCall("Kafka.OnCh_ConfigChange").withParams(params).execute(context);
	}
	public static void sub_Restart(IContext context)
	{
		Map<java.lang.String, Object> params = new HashMap<>();
		Core.microflowCall("Kafka.Sub_Restart").withParams(params).execute(context);
	}
	public static void sub_StartConsumer(IContext context, kafka.proxies.Consumer _consumer)
	{
		Map<java.lang.String, Object> params = new HashMap<>();
		params.put("Consumer", _consumer == null ? null : _consumer.getMendixObject());
		Core.microflowCall("Kafka.Sub_StartConsumer").withParams(params).execute(context);
	}
	public static void sub_StartProducer(IContext context, kafka.proxies.Producer _producer)
	{
		Map<java.lang.String, Object> params = new HashMap<>();
		params.put("Producer", _producer == null ? null : _producer.getMendixObject());
		Core.microflowCall("Kafka.Sub_StartProducer").withParams(params).execute(context);
	}
}