// This file was generated by Mendix Studio Pro.
//
// WARNING: Code you write here will be lost the next time you deploy the project.

package kafka.proxies;

/**
 * The configuration of a processor. See http://kafka.apache.org/documentation.html#streamsconfigs for all configuration options.
 */
public class StreamsConfig extends kafka.proxies.Config
{
	/**
	 * Internal name of this entity
	 */
	public static final java.lang.String entityName = "Kafka.StreamsConfig";

	/**
	 * Enum describing members of this entity
	 */
	public enum MemberNames
	{
		application_id("application_id"),
		replication_factor("replication_factor"),
		cache_max_bytes_buffering("cache_max_bytes_buffering"),
		default_deserialization_exception_handler("default_deserialization_exception_handler"),
		default_timestamp_extractor("default_timestamp_extractor"),
		num_standby_replicas("num_standby_replicas"),
		num_stream_threads("num_stream_threads"),
		processing_guarantee("processing_guarantee"),
		application_server("application_server"),
		buffered_records_per_partition("buffered_records_per_partition"),
		commit_interval_ms("commit_interval_ms"),
		partition_grouper("partition_grouper"),
		poll_ms("poll_ms"),
		rocksdb_config_setter("rocksdb_config_setter"),
		state_cleanup_delay_ms("state_cleanup_delay_ms"),
		windowstore_changelog_additional_retention_ms("windowstore_changelog_additional_retention_ms"),
		bootstrap_servers("bootstrap_servers"),
		connections_max_idle_ms("connections_max_idle_ms"),
		receive_buffer_bytes("receive_buffer_bytes"),
		request_timeout_ms("request_timeout_ms"),
		sasl_jaas_config("sasl_jaas_config"),
		sasl_kerberos_service_name("sasl_kerberos_service_name"),
		sasl_mechanism("sasl_mechanism"),
		security_protocol("security_protocol"),
		send_buffer_bytes("send_buffer_bytes"),
		ssl_enabled_protocols("ssl_enabled_protocols"),
		ssl_keystore_type("ssl_keystore_type"),
		ssl_protocol("ssl_protocol"),
		ssl_provider("ssl_provider"),
		ssl_truststore_type("ssl_truststore_type"),
		client_id("client_id"),
		interceptor_classes("interceptor_classes"),
		metadata_max_age_ms("metadata_max_age_ms"),
		metric_reporters("metric_reporters"),
		metrics_num_samples("metrics_num_samples"),
		metrics_recording_level("metrics_recording_level"),
		metrics_sample_window_ms("metrics_sample_window_ms"),
		reconnect_backoff_max_ms("reconnect_backoff_max_ms"),
		reconnect_backoff_ms("reconnect_backoff_ms"),
		retry_backoff_ms("retry_backoff_ms"),
		sasl_kerberos_kinit_cmd("sasl_kerberos_kinit_cmd"),
		sasl_kerberos_min_time_before_relogin("sasl_kerberos_min_time_before_relogin"),
		sasl_kerberos_ticket_renew_jitter("sasl_kerberos_ticket_renew_jitter"),
		sasl_kerberos_ticket_renew_window_factor("sasl_kerberos_ticket_renew_window_factor"),
		ssl_cipher_suites("ssl_cipher_suites"),
		ssl_endpoint_identification_algorithm("ssl_endpoint_identification_algorithm"),
		ssl_keymanager_algorithm("ssl_keymanager_algorithm"),
		ssl_secure_random_implementation("ssl_secure_random_implementation"),
		ssl_trustmanager_algorithm("ssl_trustmanager_algorithm"),
		Server_Config("Kafka.Server_Config");

		private java.lang.String metaName;

		MemberNames(java.lang.String s)
		{
			metaName = s;
		}

		@java.lang.Override
		public java.lang.String toString()
		{
			return metaName;
		}
	}

	public StreamsConfig(com.mendix.systemwideinterfaces.core.IContext context)
	{
		this(context, com.mendix.core.Core.instantiate(context, "Kafka.StreamsConfig"));
	}

	protected StreamsConfig(com.mendix.systemwideinterfaces.core.IContext context, com.mendix.systemwideinterfaces.core.IMendixObject streamsConfigMendixObject)
	{
		super(context, streamsConfigMendixObject);
		if (!com.mendix.core.Core.isSubClassOf("Kafka.StreamsConfig", streamsConfigMendixObject.getType()))
			throw new java.lang.IllegalArgumentException("The given object is not a Kafka.StreamsConfig");
	}

	/**
	 * @deprecated Use 'StreamsConfig.load(IContext, IMendixIdentifier)' instead.
	 */
	@java.lang.Deprecated
	public static kafka.proxies.StreamsConfig initialize(com.mendix.systemwideinterfaces.core.IContext context, com.mendix.systemwideinterfaces.core.IMendixIdentifier mendixIdentifier) throws com.mendix.core.CoreException
	{
		return kafka.proxies.StreamsConfig.load(context, mendixIdentifier);
	}

	/**
	 * Initialize a proxy using context (recommended). This context will be used for security checking when the get- and set-methods without context parameters are called.
	 * The get- and set-methods with context parameter should be used when for instance sudo access is necessary (IContext.createSudoClone() can be used to obtain sudo access).
	 */
	public static kafka.proxies.StreamsConfig initialize(com.mendix.systemwideinterfaces.core.IContext context, com.mendix.systemwideinterfaces.core.IMendixObject mendixObject)
	{
		return new kafka.proxies.StreamsConfig(context, mendixObject);
	}

	public static kafka.proxies.StreamsConfig load(com.mendix.systemwideinterfaces.core.IContext context, com.mendix.systemwideinterfaces.core.IMendixIdentifier mendixIdentifier) throws com.mendix.core.CoreException
	{
		com.mendix.systemwideinterfaces.core.IMendixObject mendixObject = com.mendix.core.Core.retrieveId(context, mendixIdentifier);
		return kafka.proxies.StreamsConfig.initialize(context, mendixObject);
	}

	public static java.util.List<kafka.proxies.StreamsConfig> load(com.mendix.systemwideinterfaces.core.IContext context, java.lang.String xpathConstraint) throws com.mendix.core.CoreException
	{
		java.util.List<kafka.proxies.StreamsConfig> result = new java.util.ArrayList<kafka.proxies.StreamsConfig>();
		for (com.mendix.systemwideinterfaces.core.IMendixObject obj : com.mendix.core.Core.retrieveXPathQuery(context, "//Kafka.StreamsConfig" + xpathConstraint))
			result.add(kafka.proxies.StreamsConfig.initialize(context, obj));
		return result;
	}

	/**
	 * @return value of application_id
	 */
	public final java.lang.String getapplication_id()
	{
		return getapplication_id(getContext());
	}

	/**
	 * @param context
	 * @return value of application_id
	 */
	public final java.lang.String getapplication_id(com.mendix.systemwideinterfaces.core.IContext context)
	{
		return (java.lang.String) getMendixObject().getValue(context, MemberNames.application_id.toString());
	}

	/**
	 * Set value of application_id
	 * @param application_id
	 */
	public final void setapplication_id(java.lang.String application_id)
	{
		setapplication_id(getContext(), application_id);
	}

	/**
	 * Set value of application_id
	 * @param context
	 * @param application_id
	 */
	public final void setapplication_id(com.mendix.systemwideinterfaces.core.IContext context, java.lang.String application_id)
	{
		getMendixObject().setValue(context, MemberNames.application_id.toString(), application_id);
	}

	/**
	 * @return value of replication_factor
	 */
	public final java.lang.Integer getreplication_factor()
	{
		return getreplication_factor(getContext());
	}

	/**
	 * @param context
	 * @return value of replication_factor
	 */
	public final java.lang.Integer getreplication_factor(com.mendix.systemwideinterfaces.core.IContext context)
	{
		return (java.lang.Integer) getMendixObject().getValue(context, MemberNames.replication_factor.toString());
	}

	/**
	 * Set value of replication_factor
	 * @param replication_factor
	 */
	public final void setreplication_factor(java.lang.Integer replication_factor)
	{
		setreplication_factor(getContext(), replication_factor);
	}

	/**
	 * Set value of replication_factor
	 * @param context
	 * @param replication_factor
	 */
	public final void setreplication_factor(com.mendix.systemwideinterfaces.core.IContext context, java.lang.Integer replication_factor)
	{
		getMendixObject().setValue(context, MemberNames.replication_factor.toString(), replication_factor);
	}

	/**
	 * @return value of cache_max_bytes_buffering
	 */
	public final java.lang.Long getcache_max_bytes_buffering()
	{
		return getcache_max_bytes_buffering(getContext());
	}

	/**
	 * @param context
	 * @return value of cache_max_bytes_buffering
	 */
	public final java.lang.Long getcache_max_bytes_buffering(com.mendix.systemwideinterfaces.core.IContext context)
	{
		return (java.lang.Long) getMendixObject().getValue(context, MemberNames.cache_max_bytes_buffering.toString());
	}

	/**
	 * Set value of cache_max_bytes_buffering
	 * @param cache_max_bytes_buffering
	 */
	public final void setcache_max_bytes_buffering(java.lang.Long cache_max_bytes_buffering)
	{
		setcache_max_bytes_buffering(getContext(), cache_max_bytes_buffering);
	}

	/**
	 * Set value of cache_max_bytes_buffering
	 * @param context
	 * @param cache_max_bytes_buffering
	 */
	public final void setcache_max_bytes_buffering(com.mendix.systemwideinterfaces.core.IContext context, java.lang.Long cache_max_bytes_buffering)
	{
		getMendixObject().setValue(context, MemberNames.cache_max_bytes_buffering.toString(), cache_max_bytes_buffering);
	}

	/**
	 * @return value of default_deserialization_exception_handler
	 */
	public final java.lang.String getdefault_deserialization_exception_handler()
	{
		return getdefault_deserialization_exception_handler(getContext());
	}

	/**
	 * @param context
	 * @return value of default_deserialization_exception_handler
	 */
	public final java.lang.String getdefault_deserialization_exception_handler(com.mendix.systemwideinterfaces.core.IContext context)
	{
		return (java.lang.String) getMendixObject().getValue(context, MemberNames.default_deserialization_exception_handler.toString());
	}

	/**
	 * Set value of default_deserialization_exception_handler
	 * @param default_deserialization_exception_handler
	 */
	public final void setdefault_deserialization_exception_handler(java.lang.String default_deserialization_exception_handler)
	{
		setdefault_deserialization_exception_handler(getContext(), default_deserialization_exception_handler);
	}

	/**
	 * Set value of default_deserialization_exception_handler
	 * @param context
	 * @param default_deserialization_exception_handler
	 */
	public final void setdefault_deserialization_exception_handler(com.mendix.systemwideinterfaces.core.IContext context, java.lang.String default_deserialization_exception_handler)
	{
		getMendixObject().setValue(context, MemberNames.default_deserialization_exception_handler.toString(), default_deserialization_exception_handler);
	}

	/**
	 * @return value of default_timestamp_extractor
	 */
	public final java.lang.String getdefault_timestamp_extractor()
	{
		return getdefault_timestamp_extractor(getContext());
	}

	/**
	 * @param context
	 * @return value of default_timestamp_extractor
	 */
	public final java.lang.String getdefault_timestamp_extractor(com.mendix.systemwideinterfaces.core.IContext context)
	{
		return (java.lang.String) getMendixObject().getValue(context, MemberNames.default_timestamp_extractor.toString());
	}

	/**
	 * Set value of default_timestamp_extractor
	 * @param default_timestamp_extractor
	 */
	public final void setdefault_timestamp_extractor(java.lang.String default_timestamp_extractor)
	{
		setdefault_timestamp_extractor(getContext(), default_timestamp_extractor);
	}

	/**
	 * Set value of default_timestamp_extractor
	 * @param context
	 * @param default_timestamp_extractor
	 */
	public final void setdefault_timestamp_extractor(com.mendix.systemwideinterfaces.core.IContext context, java.lang.String default_timestamp_extractor)
	{
		getMendixObject().setValue(context, MemberNames.default_timestamp_extractor.toString(), default_timestamp_extractor);
	}

	/**
	 * @return value of num_standby_replicas
	 */
	public final java.lang.Integer getnum_standby_replicas()
	{
		return getnum_standby_replicas(getContext());
	}

	/**
	 * @param context
	 * @return value of num_standby_replicas
	 */
	public final java.lang.Integer getnum_standby_replicas(com.mendix.systemwideinterfaces.core.IContext context)
	{
		return (java.lang.Integer) getMendixObject().getValue(context, MemberNames.num_standby_replicas.toString());
	}

	/**
	 * Set value of num_standby_replicas
	 * @param num_standby_replicas
	 */
	public final void setnum_standby_replicas(java.lang.Integer num_standby_replicas)
	{
		setnum_standby_replicas(getContext(), num_standby_replicas);
	}

	/**
	 * Set value of num_standby_replicas
	 * @param context
	 * @param num_standby_replicas
	 */
	public final void setnum_standby_replicas(com.mendix.systemwideinterfaces.core.IContext context, java.lang.Integer num_standby_replicas)
	{
		getMendixObject().setValue(context, MemberNames.num_standby_replicas.toString(), num_standby_replicas);
	}

	/**
	 * @return value of num_stream_threads
	 */
	public final java.lang.Integer getnum_stream_threads()
	{
		return getnum_stream_threads(getContext());
	}

	/**
	 * @param context
	 * @return value of num_stream_threads
	 */
	public final java.lang.Integer getnum_stream_threads(com.mendix.systemwideinterfaces.core.IContext context)
	{
		return (java.lang.Integer) getMendixObject().getValue(context, MemberNames.num_stream_threads.toString());
	}

	/**
	 * Set value of num_stream_threads
	 * @param num_stream_threads
	 */
	public final void setnum_stream_threads(java.lang.Integer num_stream_threads)
	{
		setnum_stream_threads(getContext(), num_stream_threads);
	}

	/**
	 * Set value of num_stream_threads
	 * @param context
	 * @param num_stream_threads
	 */
	public final void setnum_stream_threads(com.mendix.systemwideinterfaces.core.IContext context, java.lang.Integer num_stream_threads)
	{
		getMendixObject().setValue(context, MemberNames.num_stream_threads.toString(), num_stream_threads);
	}

	/**
	 * @return value of processing_guarantee
	 */
	public final java.lang.String getprocessing_guarantee()
	{
		return getprocessing_guarantee(getContext());
	}

	/**
	 * @param context
	 * @return value of processing_guarantee
	 */
	public final java.lang.String getprocessing_guarantee(com.mendix.systemwideinterfaces.core.IContext context)
	{
		return (java.lang.String) getMendixObject().getValue(context, MemberNames.processing_guarantee.toString());
	}

	/**
	 * Set value of processing_guarantee
	 * @param processing_guarantee
	 */
	public final void setprocessing_guarantee(java.lang.String processing_guarantee)
	{
		setprocessing_guarantee(getContext(), processing_guarantee);
	}

	/**
	 * Set value of processing_guarantee
	 * @param context
	 * @param processing_guarantee
	 */
	public final void setprocessing_guarantee(com.mendix.systemwideinterfaces.core.IContext context, java.lang.String processing_guarantee)
	{
		getMendixObject().setValue(context, MemberNames.processing_guarantee.toString(), processing_guarantee);
	}

	/**
	 * @return value of application_server
	 */
	public final java.lang.String getapplication_server()
	{
		return getapplication_server(getContext());
	}

	/**
	 * @param context
	 * @return value of application_server
	 */
	public final java.lang.String getapplication_server(com.mendix.systemwideinterfaces.core.IContext context)
	{
		return (java.lang.String) getMendixObject().getValue(context, MemberNames.application_server.toString());
	}

	/**
	 * Set value of application_server
	 * @param application_server
	 */
	public final void setapplication_server(java.lang.String application_server)
	{
		setapplication_server(getContext(), application_server);
	}

	/**
	 * Set value of application_server
	 * @param context
	 * @param application_server
	 */
	public final void setapplication_server(com.mendix.systemwideinterfaces.core.IContext context, java.lang.String application_server)
	{
		getMendixObject().setValue(context, MemberNames.application_server.toString(), application_server);
	}

	/**
	 * @return value of buffered_records_per_partition
	 */
	public final java.lang.Integer getbuffered_records_per_partition()
	{
		return getbuffered_records_per_partition(getContext());
	}

	/**
	 * @param context
	 * @return value of buffered_records_per_partition
	 */
	public final java.lang.Integer getbuffered_records_per_partition(com.mendix.systemwideinterfaces.core.IContext context)
	{
		return (java.lang.Integer) getMendixObject().getValue(context, MemberNames.buffered_records_per_partition.toString());
	}

	/**
	 * Set value of buffered_records_per_partition
	 * @param buffered_records_per_partition
	 */
	public final void setbuffered_records_per_partition(java.lang.Integer buffered_records_per_partition)
	{
		setbuffered_records_per_partition(getContext(), buffered_records_per_partition);
	}

	/**
	 * Set value of buffered_records_per_partition
	 * @param context
	 * @param buffered_records_per_partition
	 */
	public final void setbuffered_records_per_partition(com.mendix.systemwideinterfaces.core.IContext context, java.lang.Integer buffered_records_per_partition)
	{
		getMendixObject().setValue(context, MemberNames.buffered_records_per_partition.toString(), buffered_records_per_partition);
	}

	/**
	 * @return value of commit_interval_ms
	 */
	public final java.lang.Long getcommit_interval_ms()
	{
		return getcommit_interval_ms(getContext());
	}

	/**
	 * @param context
	 * @return value of commit_interval_ms
	 */
	public final java.lang.Long getcommit_interval_ms(com.mendix.systemwideinterfaces.core.IContext context)
	{
		return (java.lang.Long) getMendixObject().getValue(context, MemberNames.commit_interval_ms.toString());
	}

	/**
	 * Set value of commit_interval_ms
	 * @param commit_interval_ms
	 */
	public final void setcommit_interval_ms(java.lang.Long commit_interval_ms)
	{
		setcommit_interval_ms(getContext(), commit_interval_ms);
	}

	/**
	 * Set value of commit_interval_ms
	 * @param context
	 * @param commit_interval_ms
	 */
	public final void setcommit_interval_ms(com.mendix.systemwideinterfaces.core.IContext context, java.lang.Long commit_interval_ms)
	{
		getMendixObject().setValue(context, MemberNames.commit_interval_ms.toString(), commit_interval_ms);
	}

	/**
	 * @return value of partition_grouper
	 */
	public final java.lang.String getpartition_grouper()
	{
		return getpartition_grouper(getContext());
	}

	/**
	 * @param context
	 * @return value of partition_grouper
	 */
	public final java.lang.String getpartition_grouper(com.mendix.systemwideinterfaces.core.IContext context)
	{
		return (java.lang.String) getMendixObject().getValue(context, MemberNames.partition_grouper.toString());
	}

	/**
	 * Set value of partition_grouper
	 * @param partition_grouper
	 */
	public final void setpartition_grouper(java.lang.String partition_grouper)
	{
		setpartition_grouper(getContext(), partition_grouper);
	}

	/**
	 * Set value of partition_grouper
	 * @param context
	 * @param partition_grouper
	 */
	public final void setpartition_grouper(com.mendix.systemwideinterfaces.core.IContext context, java.lang.String partition_grouper)
	{
		getMendixObject().setValue(context, MemberNames.partition_grouper.toString(), partition_grouper);
	}

	/**
	 * @return value of poll_ms
	 */
	public final java.lang.Long getpoll_ms()
	{
		return getpoll_ms(getContext());
	}

	/**
	 * @param context
	 * @return value of poll_ms
	 */
	public final java.lang.Long getpoll_ms(com.mendix.systemwideinterfaces.core.IContext context)
	{
		return (java.lang.Long) getMendixObject().getValue(context, MemberNames.poll_ms.toString());
	}

	/**
	 * Set value of poll_ms
	 * @param poll_ms
	 */
	public final void setpoll_ms(java.lang.Long poll_ms)
	{
		setpoll_ms(getContext(), poll_ms);
	}

	/**
	 * Set value of poll_ms
	 * @param context
	 * @param poll_ms
	 */
	public final void setpoll_ms(com.mendix.systemwideinterfaces.core.IContext context, java.lang.Long poll_ms)
	{
		getMendixObject().setValue(context, MemberNames.poll_ms.toString(), poll_ms);
	}

	/**
	 * @return value of rocksdb_config_setter
	 */
	public final java.lang.String getrocksdb_config_setter()
	{
		return getrocksdb_config_setter(getContext());
	}

	/**
	 * @param context
	 * @return value of rocksdb_config_setter
	 */
	public final java.lang.String getrocksdb_config_setter(com.mendix.systemwideinterfaces.core.IContext context)
	{
		return (java.lang.String) getMendixObject().getValue(context, MemberNames.rocksdb_config_setter.toString());
	}

	/**
	 * Set value of rocksdb_config_setter
	 * @param rocksdb_config_setter
	 */
	public final void setrocksdb_config_setter(java.lang.String rocksdb_config_setter)
	{
		setrocksdb_config_setter(getContext(), rocksdb_config_setter);
	}

	/**
	 * Set value of rocksdb_config_setter
	 * @param context
	 * @param rocksdb_config_setter
	 */
	public final void setrocksdb_config_setter(com.mendix.systemwideinterfaces.core.IContext context, java.lang.String rocksdb_config_setter)
	{
		getMendixObject().setValue(context, MemberNames.rocksdb_config_setter.toString(), rocksdb_config_setter);
	}

	/**
	 * @return value of state_cleanup_delay_ms
	 */
	public final java.lang.Long getstate_cleanup_delay_ms()
	{
		return getstate_cleanup_delay_ms(getContext());
	}

	/**
	 * @param context
	 * @return value of state_cleanup_delay_ms
	 */
	public final java.lang.Long getstate_cleanup_delay_ms(com.mendix.systemwideinterfaces.core.IContext context)
	{
		return (java.lang.Long) getMendixObject().getValue(context, MemberNames.state_cleanup_delay_ms.toString());
	}

	/**
	 * Set value of state_cleanup_delay_ms
	 * @param state_cleanup_delay_ms
	 */
	public final void setstate_cleanup_delay_ms(java.lang.Long state_cleanup_delay_ms)
	{
		setstate_cleanup_delay_ms(getContext(), state_cleanup_delay_ms);
	}

	/**
	 * Set value of state_cleanup_delay_ms
	 * @param context
	 * @param state_cleanup_delay_ms
	 */
	public final void setstate_cleanup_delay_ms(com.mendix.systemwideinterfaces.core.IContext context, java.lang.Long state_cleanup_delay_ms)
	{
		getMendixObject().setValue(context, MemberNames.state_cleanup_delay_ms.toString(), state_cleanup_delay_ms);
	}

	/**
	 * @return value of windowstore_changelog_additional_retention_ms
	 */
	public final java.lang.Long getwindowstore_changelog_additional_retention_ms()
	{
		return getwindowstore_changelog_additional_retention_ms(getContext());
	}

	/**
	 * @param context
	 * @return value of windowstore_changelog_additional_retention_ms
	 */
	public final java.lang.Long getwindowstore_changelog_additional_retention_ms(com.mendix.systemwideinterfaces.core.IContext context)
	{
		return (java.lang.Long) getMendixObject().getValue(context, MemberNames.windowstore_changelog_additional_retention_ms.toString());
	}

	/**
	 * Set value of windowstore_changelog_additional_retention_ms
	 * @param windowstore_changelog_additional_retention_ms
	 */
	public final void setwindowstore_changelog_additional_retention_ms(java.lang.Long windowstore_changelog_additional_retention_ms)
	{
		setwindowstore_changelog_additional_retention_ms(getContext(), windowstore_changelog_additional_retention_ms);
	}

	/**
	 * Set value of windowstore_changelog_additional_retention_ms
	 * @param context
	 * @param windowstore_changelog_additional_retention_ms
	 */
	public final void setwindowstore_changelog_additional_retention_ms(com.mendix.systemwideinterfaces.core.IContext context, java.lang.Long windowstore_changelog_additional_retention_ms)
	{
		getMendixObject().setValue(context, MemberNames.windowstore_changelog_additional_retention_ms.toString(), windowstore_changelog_additional_retention_ms);
	}

	@java.lang.Override
	public boolean equals(Object obj)
	{
		if (obj == this)
			return true;

		if (obj != null && getClass().equals(obj.getClass()))
		{
			final kafka.proxies.StreamsConfig that = (kafka.proxies.StreamsConfig) obj;
			return getMendixObject().equals(that.getMendixObject());
		}
		return false;
	}

	@java.lang.Override
	public int hashCode()
	{
		return getMendixObject().hashCode();
	}

	/**
	 * @return String name of this class
	 */
	public static java.lang.String getType()
	{
		return "Kafka.StreamsConfig";
	}

	/**
	 * @return String GUID from this object, format: ID_0000000000
	 * @deprecated Use getMendixObject().getId().toLong() to get a unique identifier for this object.
	 */
	@java.lang.Override
	@java.lang.Deprecated
	public java.lang.String getGUID()
	{
		return "ID_" + getMendixObject().getId().toLong();
	}
}
